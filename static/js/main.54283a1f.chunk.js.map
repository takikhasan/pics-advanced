{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","actions/index.js","components/ImageCard.js","components/ImageList.js","components/App.js","reducers/paramsReducer.js","reducers/index.js","reducers/imageReducer.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSumbit","event","preventDefault","props","newQuery","newImages","className","onSubmit","this","type","onChange","e","setState","target","value","React","Component","connect","dispatch","a","async","payload","getState","unsplash","get","params","response","data","results","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","load_next","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","addPage","addImages","console","log","unobserve","observe","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","i","images","map","length","key","id","App","marginTop","initial","query","page","per_page","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54283a1f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create ({\r\n    baseURL: 'https://api.unsplash.com',\r\n    headers: {\r\n        Authorization: 'Client-ID f1d41538611bd12f0469b7d033c20b365063d39433af71dce62a97f5311e4a3f'\r\n    }\r\n});","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { newQuery, newImages } from '../actions'; \r\n\r\nclass SearchBar extends React.Component {\r\n    state = { term: '' };\r\n    \r\n    onFormSumbit = event => {\r\n        event.preventDefault();\r\n        this.props.newQuery(this.state.term);\r\n        this.props.newImages();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='ui segment'>\r\n                <form onSubmit={this.onFormSumbit} className='ui form'>\r\n                    <div className='field'>\r\n                        <label>Image Search</label>\r\n                        <input \r\n                            type='text'\r\n                            onChange={(e) => this.setState({ term: e.target.value })}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { newQuery, newImages }\r\n)(SearchBar);","import unsplash from '../api/unsplash';\r\n\r\nexport const newImages = () => async (dispatch, getState) => {\r\n    const response = await unsplash.get('/search/photos', {\r\n        params: getState().params\r\n    }); \r\n    dispatch ({\r\n        type: 'NEW_IMAGES',\r\n        payload: response.data.results \r\n    });\r\n}\r\n\r\nexport const addImages = () => async (dispatch, getState) => {\r\n    const response = await unsplash.get('/search/photos', {\r\n        params: getState().params\r\n    }); \r\n    dispatch ({\r\n        type: 'ADD_IMAGES',\r\n        payload: response.data.results \r\n    });\r\n}\r\n\r\nexport const newQuery = (term) => async dispatch => {\r\n    dispatch ({\r\n        type: 'NEW_QUERY',\r\n        payload: term\r\n    });\r\n}\r\n\r\nexport const addPage = () => async dispatch => {\r\n    dispatch ({\r\n        type: 'ADD_PAGE'\r\n    });\r\n}","import React from 'react';\r\nimport { addPage, addImages } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ImageCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { spans: 0 };\r\n        this.imageRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.imageRef.current.addEventListener('load', this.setSpans);\r\n        this.imageRef.current.addEventListener('load', () => {\r\n            if (this.props.load_next === true) {\r\n                const observer = new IntersectionObserver((entries) => {\r\n                    entries.forEach((entry) => {\r\n                        if (entry.isIntersecting) {\r\n                            this.props.addPage();\r\n                            this.props.addImages();\r\n                            console.log('LOADED ANOTHER PAGE');\r\n                            observer.unobserve(this.imageRef.current);\r\n                        }\r\n                    });\r\n                }, {});\r\n                observer.observe(this.imageRef.current);\r\n            }\r\n        });\r\n    }\r\n\r\n    setSpans = () => {\r\n        const height = this.imageRef.current.clientHeight;\r\n        const spans = Math.ceil(height / 30);\r\n        this.setState({ spans });\r\n    }\r\n\r\n    render() {\r\n        const { description, urls } = this.props.image;\r\n        return (\r\n            <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n                <img\r\n                    ref={this.imageRef}\r\n                    alt={description}\r\n                    src={urls.regular}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { addPage, addImages }\r\n)(ImageCard);","import './ImageList.css';\r\nimport React from 'react';\r\nimport ImageCard from './ImageCard';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass ImageList extends React.Component {\r\n    render () {\r\n        let i = 0;\r\n        let load_next = false;\r\n        const images = this.props.images.map((image) => {\r\n            i++;\r\n            if (i === this.props.images.length) load_next = true;\r\n            return <ImageCard key={image.id} image={image} load_next={load_next}/>\r\n        });\r\n        return <div className='image-list'>{images}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { images: state.images };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {}\r\n)(ImageList);","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport ImageList from './ImageList';\r\n\r\nclass App extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className='ui container' style={{ marginTop: '10px' }}>\r\n                <SearchBar/>\r\n                <ImageList/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const initial = {\r\n    query: '',\r\n    page: 1,\r\n    per_page: 30\r\n}\r\n\r\nexport default (state = initial, action) => {\r\n    switch (action.type) {\r\n        case 'NEW_QUERY':\r\n            return { ...initial, query: action.payload };\r\n        case 'ADD_PAGE':\r\n            return { ...state, page: state.page + 1 };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport imageReducer from './imageReducer';\r\nimport paramsReducer from './paramsReducer';\r\n\r\nexport default combineReducers({\r\n    images: imageReducer,\r\n    params: paramsReducer\r\n});","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'NEW_IMAGES':\r\n            return action.payload;\r\n        case 'ADD_IMAGES':\r\n            return [...state, ...action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n \r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root') \r\n);"],"sourceRoot":""}